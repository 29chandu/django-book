Part 1: getting started
```````````````````````

    1. Introduction to Django

        * What is Django?
        * Why was Django developed?
        * Who uses Django?
        * Who should use Django?

    2. Getting started

        * Installing
        * Starting a project
        * Initial configuration
        * About the project we'll build -- a U.S. census database

    3. Creating models

        * What's a model?
        * Defining the first model
        * Installing models
        * Playing with the basic Python CRUD API

    4. The admin site

        * What's the admin site?
        * Playing with the auto-generated admin
        * Adding admin options to our model

    5. Writing views

        * What's a view?
        * Mapping URLs to views
        * Writing a first view
        * Handling 404s
        * Handling unexpected errors

    6. The template engine

        * What's a template?
        * Why use templates?
        * Templating the first view

    7. Form processing

        * Manipulators, FormWrappers, and FormFields (oh my!)
        * Using automatically generated manipulators
        * A view for form processing

Part 2: Django's sub-frameworks
```````````````````````````````

    8. Generic views

        * What are generic views?
        * "Simple" generic views
        * Serving static files
        * List/detail generic views
        * Date-based generic views
        * Create/update/delete generic views

    9. Extending the template engine

        * Custom template tag/filter libraries
        * Context processors
        * Template loaders

    10. Outputting non-HTML content

        * Creating an simple RSS feed
        * Creating parameterized RSS feeds
        * Creating images and PDFs
        * Outputting other formats
        * Sending and receiving email

    11. Users, sessions, and registration

        * Users, groups and permissions
        * Accepting public registrations
        * Views that require login
        * The sessions framework

    12. Comments

        * The free-comments framework
        * The registered-users comments framework
        * Comment moderation

    13. Caching

        * Setting up the cache
        * Caching entire sites
        * Caching certain views
        * The low-level cache API
        * Cache-control with HTTP headers
        
    14. Other contributed sub-frameworks
    
        * Content-types
        * CSRF
        * Flatpages
        * Redirects
        * Markup
        * Sites
        
    15. Middleware
    
        * What is middleware?
        * Built-in middleware
        * Writing custom middleware.

    16. Integrating with legacy databases

        * Auto-generating models from a database

    17. Customizing the Django admin

        * Customizing the look and feel
        * Customizing the functionality
        * Using the admin functionality outside of the admin

    18. Internationalization and localization

        * Overview
        * Internationalizing your Python code
        * Internationalizing templates
        * Switching languages
        * Creating translation files

    19. Deploying Django

        * General deployment advice and options
        * Deploying Django with mod_python
        * Deploying Django with FCGI
        * How to scale up

Part 3: Reference
`````````````````

Each of these chapters is basically a printed version of a single document from the only Django documentation, perhaps modified slightly to fit better with the book.

The order for these is still TBD.

    #. Model definition reference (docs/model-api.txt)

    #. Database API reference (docs/db-api.txt)
    
    #. Transactions (docs/transactions.txt) -- should this perhaps get an 
       actual chapter?

    #. URL dispatch reference (docs/url_dispatch.txt)

    #. Settings reference (docs/settings.txt)

    #. Built-in template tag/filter reference (docs/templates.txt)

    #. The django-admin/manage.py utility (docs/django-admin.txt)

    #. Request and response objects (docs/request_response.txt)
    
Things without a home
`````````````````````

A few topics that the book needs to address that don't have a home in this outline:

    * Security issues:
    
        * Protection against SQL injection
        * Preventing XSS
        * Dealing with 'bots, spiders, and other malicious browsers
        * Techniques for dealing with user submitted content
        * ...
        
      Perhaps this should go in the "deployment" chapter? Or after? I'm not 
      too happy about leaving it towards the end of the book, though...
      
    * Validators.  Not enough here to really warrant its own chapter... so 
      where?